name: Build and Share APK with QR

on:
  pull_request:
    branches:
      - "*"

permissions:
  pull-requests: write
  contents: read

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: |
          npm install
          npx expo install

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Clean and Build APK
        run: |
          cd android
          ./gradlew clean
          ./gradlew assembleDebug --info --stacktrace

      - name: Upload APK to Dropbox
        run: |
          apk_path="android/app/build/outputs/apk/debug/app-debug.apk"
          DROPBOX_ACCESS_TOKEN="${{ secrets.DROPBOX_ACCESS_TOKEN }}"

          RESPONSE=$(curl -s -X POST https://content.dropboxapi.com/2/files/upload \
            --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
            --header "Dropbox-API-Arg: {\"path\": \"/app-debug.apk\",\"mode\": \"overwrite\",\"autorename\": false,\"mute\": false}" \
            --header "Content-Type: application/octet-stream" \
            --data-binary @$apk_path)

          echo "Dropbox upload response: $RESPONSE"

          # Extract path_display safely
          DROPBOX_FILE_PATH=$(echo "$RESPONSE" | jq -r '.path_display' 2>/dev/null || echo "")

          if [ -z "$DROPBOX_FILE_PATH" ]; then
            echo "Failed to extract file path from response"
            exit 1
          fi

          SHARE_RESPONSE=$(curl -s -X POST https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings \
            --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
            --header "Content-Type: application/json" \
            --data "{\"path\": \"$DROPBOX_FILE_PATH\", \"settings\": {\"requested_visibility\": \"public\"}}")

          echo "Dropbox share response: $SHARE_RESPONSE"

          # Extract download link safely
          DROPBOX_DOWNLOAD_LINK=$(echo "$SHARE_RESPONSE" | jq -r '.url' 2>/dev/null | sed 's?dl=0?dl=1?' || echo "")

          if [ -z "$DROPBOX_DOWNLOAD_LINK" ]; then
            echo "Failed to extract download link from response"
            exit 1
          fi

          echo "APK_DROPBOX_URL=$DROPBOX_DOWNLOAD_LINK" >> $GITHUB_ENV
          echo "APK download link: $DROPBOX_DOWNLOAD_LINK"

      - name: Generate QR Code
        run: |
          QR_CODE="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${{ env.APK_DROPBOX_URL }}"
          echo "![QR Code]($QR_CODE)" >> $GITHUB_STEP_SUMMARY

      - name: Post QR code comment on PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ðŸš€ APK is ready for testing! 
            [Download APK from Dropbox](${{ env.APK_DROPBOX_URL }})

            ![QR Code](https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${{ env.APK_DROPBOX_URL }})
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
